var search_data = {"index":{"searchIndex":["applicationcontroller","applicationhelper","billingsite","billingsitescontroller","billingsiteshelper","capacitycharge","certificatecharge","chargefactory","concretecharge","dailyusagecharge","dashingcontroller","dashinghelper","ftpserver","ftpserverscontroller","ftpservershelper","generatedinvoice","globalusagecharge","importedinvoice","invoice","invoicescontroller","invoiceshelper","linearregressionpredictor","meter","meteraggregation","meteraggregationscontroller","meteraggregationshelper","meterpredictor","meterrecord","meterrecordscontroller","meterrecordshelper","metering","classmethods","meteringcharge","meterscontroller","metershelper","predictedinvoice","retailplan","retailplanscontroller","retailplanshelper","retailer","site","sitescontroller","siteshelper","supplycharge","user","users","confirmationscontroller","omniauthcallbackscontroller","passwordscontroller","registrationscontroller","sessionscontroller","unlockscontroller","userscontroller","usershelper","after_sign_out_path_for()","aggregate_and_store()","aggregate_missing_data()","all_day()","authenticate()","baddateerror()","badmetererror()","badtimeerror()","bad_daily_time_periods_error()","bad_date_range_error()","billing_site_params()","calculate()","calculate()","capacity_charges()","certificate_charges()","charge_types()","chargefactories()","check_meter()","check_meters()","check_time()","check_times()","compare()","compareinvoices()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","concretecharge()","confidence_query()","configure_account_update_params()","configure_sign_up_params()","create()","create()","create()","create()","create()","create()","create()","create_generated_invoice()","create_imported_invoice()","create_predicted_invoice()","current_retail_plan()","dailytimeperiods()","daily_full_usage_sums()","daily_time_periods()","daily_time_periods()","daily_usage()","daily_usage_charges()","daily_usage_hash()","daily_usage_sums()","dashboard()","date_clashes()","date_to_offset_integer()","dates_to_offset_integers()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_meter_aggregations()","destroy_meter_predictors()","destroy_meter_records()","detailed_predicted_usage_by_meter()","detailed_predicted_usage_by_meter()","detailed_predicted_usage_by_time()","detailed_predicted_usage_by_time()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_meter()","detailed_usage_by_time()","detailed_usage_by_time()","detailed_usage_by_time()","detailed_usage_by_time()","directorynotfounderror()","download()","dtp_meter_usage()","dtp_meter_usage_sums()","dtp_usage()","edit()","edit()","edit()","edit()","edit()","edit()","format_converter()","generatenew()","generate_date_ranges()","get_daily_time_periods()","get_date_ranges()","get_dtps()","get_meters()","get_prediction_invoice()","get_prediction_invoice()","global_usage_charges()","importcsv()","import_concrete_charge()","import_invoice()","import_nem12()","import_nem12()","import_nem12()","import_nem12()","inclusive_usage()","index()","index()","index()","index()","index()","index()","index()","invoice_directory()","isdate()","is_array_of_meters()","is_date()","is_meter()","is_time()","is_valid_daily_time_periods()","is_valid_date_ranges()","log_pg_result()","make_daily_meter_hash_array()","make_meter_daily_hash_array()","make_prediction()","meter_usage()","metering_charges()","meters()","midday()","midday()","minutes_in_day()","minutes_in_hour()","multiple_predicted_usage()","multiple_usage()","name_presence()","nem12_uom()","nem12_uom_to_kuom()","nem12_uom_to_kwh_multiplier()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify_new_data()","offset_integer_to_date()","offset_integers_to_dates()","pgresult_to_hash()","portable_format()","predict()","predictnew()","predict_for_period()","predict_format_converter()","predict_whole_day()","predictable_billing_periods()","predicted_usage_by_meter()","predicted_usage_by_meter()","predicted_usage_by_time()","predicted_usage_by_time()","predictor()","reaggregate()","redirect_user()","retail_plan_params()","select_date_period()","set_retail_plan()","show()","show()","show()","show()","show()","show()","show()","show()","show_predict_usage()","show_usage()","single_predicted_usage()","single_usage()","store_attributes()","store_file()","sum_usage()","supply_charges()","time()","time_to_minute()","total_dtp_usage_sums()","total_meter_usage_sums()","total_usage_sums()","trim_date_ranges()","truncate()","truncate()","truncate_aggregations()","truncate_records()","update()","update()","update()","update()","update()","update()","update()","update_generated_invoice()","update_poll_dates()","upload_nem12()","usage()","usage()","usage()","usage_by_dtp()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_meter()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","usage_by_time()","use()","value_presence()","readme"],"longSearchIndex":["applicationcontroller","applicationhelper","billingsite","billingsitescontroller","billingsiteshelper","capacitycharge","certificatecharge","chargefactory","concretecharge","dailyusagecharge","dashingcontroller","dashinghelper","ftpserver","ftpserverscontroller","ftpservershelper","generatedinvoice","globalusagecharge","importedinvoice","invoice","invoicescontroller","invoiceshelper","linearregressionpredictor","meter","meteraggregation","meteraggregationscontroller","meteraggregationshelper","meterpredictor","meterrecord","meterrecordscontroller","meterrecordshelper","metering","metering::classmethods","meteringcharge","meterscontroller","metershelper","predictedinvoice","retailplan","retailplanscontroller","retailplanshelper","retailer","site","sitescontroller","siteshelper","supplycharge","user","users","users::confirmationscontroller","users::omniauthcallbackscontroller","users::passwordscontroller","users::registrationscontroller","users::sessionscontroller","users::unlockscontroller","userscontroller","usershelper","applicationcontroller#after_sign_out_path_for()","meteraggregation::aggregate_and_store()","meteraggregation::aggregate_missing_data()","metering::classmethods#all_day()","applicationcontroller#authenticate()","metering::classmethods#baddateerror()","metering::classmethods#badmetererror()","metering::classmethods#badtimeerror()","metering::classmethods#bad_daily_time_periods_error()","metering::classmethods#bad_date_range_error()","billingsitescontroller#billing_site_params()","linearregressionpredictor::calculate()","meterpredictor::calculate()","retailplan#capacity_charges()","retailplan#certificate_charges()","chargefactory::charge_types()","retailplan#chargefactories()","linearregressionpredictor::check_meter()","linearregressionpredictor::check_meters()","linearregressionpredictor::check_time()","linearregressionpredictor::check_times()","invoicescontroller#compare()","invoice::compareinvoices()","capacitycharge#concretecharge()","certificatecharge#concretecharge()","chargefactory#concretecharge()","dailyusagecharge#concretecharge()","globalusagecharge#concretecharge()","meteringcharge#concretecharge()","supplycharge#concretecharge()","meteraggregation::confidence_query()","users::registrationscontroller#configure_account_update_params()","users::registrationscontroller#configure_sign_up_params()","billingsitescontroller#create()","ftpserverscontroller#create()","meteraggregationscontroller#create()","meterrecordscontroller#create()","meterscontroller#create()","retailplanscontroller#create()","sitescontroller#create()","invoicescontroller#create_generated_invoice()","invoicescontroller#create_imported_invoice()","invoicescontroller#create_predicted_invoice()","retailplanshelper#current_retail_plan()","retailplan::dailytimeperiods()","meteraggregation::daily_full_usage_sums()","retailplan::daily_time_periods()","retailplan#daily_time_periods()","linearregressionpredictor#daily_usage()","retailplan#daily_usage_charges()","meteraggregation::daily_usage_hash()","meteraggregation::daily_usage_sums()","dashingcontroller#dashboard()","retailplan#date_clashes()","linearregressionpredictor::date_to_offset_integer()","linearregressionpredictor::dates_to_offset_integers()","billingsitescontroller#destroy()","ftpserverscontroller#destroy()","invoicescontroller#destroy()","meter#destroy()","meteraggregationscontroller#destroy()","meterrecordscontroller#destroy()","meterscontroller#destroy()","retailplanscontroller#destroy()","sitescontroller#destroy()","meter#destroy_meter_aggregations()","meter#destroy_meter_predictors()","meter#destroy_meter_records()","meter#detailed_predicted_usage_by_meter()","meter::detailed_predicted_usage_by_meter()","meter::detailed_predicted_usage_by_time()","meter#detailed_predicted_usage_by_time()","linearregressionpredictor::detailed_usage_by_meter()","meter::detailed_usage_by_meter()","meter#detailed_usage_by_meter()","meterpredictor::detailed_usage_by_meter()","linearregressionpredictor::detailed_usage_by_time()","meter#detailed_usage_by_time()","meter::detailed_usage_by_time()","meterpredictor::detailed_usage_by_time()","metering::classmethods#directorynotfounderror()","ftpserver::download()","meteraggregation::dtp_meter_usage()","meteraggregation::dtp_meter_usage_sums()","meteraggregation::dtp_usage()","billingsitescontroller#edit()","ftpserverscontroller#edit()","meteraggregationscontroller#edit()","meterrecordscontroller#edit()","retailplanscontroller#edit()","sitescontroller#edit()","billingsitescontroller#format_converter()","invoicescontroller#generatenew()","billingsitescontroller#generate_date_ranges()","meter::get_daily_time_periods()","meterrecordscontroller#get_date_ranges()","meterrecordscontroller#get_dtps()","meterrecordscontroller#get_meters()","billingsitescontroller#get_prediction_invoice()","invoice::get_prediction_invoice()","retailplan#global_usage_charges()","importedinvoice#importcsv()","chargefactory#import_concrete_charge()","invoicescontroller#import_invoice()","meter::import_nem12()","meterrecord::import_nem12()","meterrecordscontroller#import_nem12()","userscontroller#import_nem12()","meteraggregation::inclusive_usage()","billingsitescontroller#index()","ftpserverscontroller#index()","invoicescontroller#index()","meteraggregationscontroller#index()","meterrecordscontroller#index()","retailplanscontroller#index()","sitescontroller#index()","importedinvoice#invoice_directory()","billingsitescontroller#isdate()","metering::classmethods#is_array_of_meters()","metering::classmethods#is_date()","metering::classmethods#is_meter()","metering::classmethods#is_time()","metering::classmethods#is_valid_daily_time_periods()","metering::classmethods#is_valid_date_ranges()","metering::classmethods#log_pg_result()","linearregressionpredictor::make_daily_meter_hash_array()","linearregressionpredictor::make_meter_daily_hash_array()","linearregressionpredictor::make_prediction()","meteraggregation::meter_usage()","retailplan#metering_charges()","retailplan#meters()","linearregressionpredictor::midday()","metering::classmethods#midday()","metering::classmethods#minutes_in_day()","metering::classmethods#minutes_in_hour()","meterrecordscontroller#multiple_predicted_usage()","meterrecordscontroller#multiple_usage()","ftpserver#name_presence()","metering::classmethods#nem12_uom()","metering::classmethods#nem12_uom_to_kuom()","metering::classmethods#nem12_uom_to_kwh_multiplier()","billingsitescontroller#new()","ftpserverscontroller#new()","generatedinvoice::new()","importedinvoice::new()","meteraggregationscontroller#new()","meterrecordscontroller#new()","predictedinvoice::new()","retailplanscontroller#new()","sitescontroller#new()","meter::notify_new_data()","linearregressionpredictor::offset_integer_to_date()","linearregressionpredictor::offset_integers_to_dates()","metering::classmethods#pgresult_to_hash()","invoice#portable_format()","linearregressionpredictor#predict()","invoicescontroller#predictnew()","linearregressionpredictor::predict_for_period()","billingsitescontroller#predict_format_converter()","linearregressionpredictor::predict_whole_day()","retailplan#predictable_billing_periods()","meter#predicted_usage_by_meter()","meter::predicted_usage_by_meter()","meter::predicted_usage_by_time()","meter#predicted_usage_by_time()","meter::predictor()","meter::reaggregate()","applicationcontroller#redirect_user()","retailplanscontroller#retail_plan_params()","invoicescontroller#select_date_period()","retailplanscontroller#set_retail_plan()","billingsitescontroller#show()","ftpserverscontroller#show()","invoicescontroller#show()","meteraggregationscontroller#show()","meterrecordscontroller#show()","retailplanscontroller#show()","sitescontroller#show()","userscontroller#show()","billingsitescontroller#show_predict_usage()","billingsitescontroller#show_usage()","meterrecordscontroller#single_predicted_usage()","meterrecordscontroller#single_usage()","concretecharge#store_attributes()","importedinvoice#store_file()","linearregressionpredictor::sum_usage()","retailplan#supply_charges()","applicationcontroller::time()","metering::classmethods#time_to_minute()","meteraggregation::total_dtp_usage_sums()","meteraggregation::total_meter_usage_sums()","meteraggregation::total_usage_sums()","meter::trim_date_ranges()","meteraggregationscontroller#truncate()","meterrecordscontroller#truncate()","meterrecordscontroller#truncate_aggregations()","meterrecordscontroller#truncate_records()","billingsitescontroller#update()","ftpserverscontroller#update()","meteraggregationscontroller#update()","meterrecordscontroller#update()","meterscontroller#update()","retailplanscontroller#update()","sitescontroller#update()","billingsite::update_generated_invoice()","ftpserver::update_poll_dates()","userscontroller#upload_nem12()","generatedinvoice::usage()","meter#usage()","predictedinvoice::usage()","meteraggregation::usage_by_dtp()","linearregressionpredictor#usage_by_meter()","linearregressionpredictor::usage_by_meter()","meter::usage_by_meter()","meter#usage_by_meter()","meteraggregation::usage_by_meter()","meterpredictor#usage_by_meter()","meterpredictor::usage_by_meter()","linearregressionpredictor::usage_by_time()","linearregressionpredictor#usage_by_time()","meter::usage_by_time()","meter#usage_by_time()","meterpredictor#usage_by_time()","meterpredictor::usage_by_time()","linearregressionpredictor::use()","retailplan#value_presence()",""],"info":[["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BillingSite","","BillingSite.html","",""],["BillingSitesController","","BillingSitesController.html","",""],["BillingSitesHelper","","BillingSitesHelper.html","",""],["CapacityCharge","","CapacityCharge.html","",""],["CertificateCharge","","CertificateCharge.html","",""],["ChargeFactory","","ChargeFactory.html","","<p>created and modified by Charlene\n"],["ConcreteCharge","","ConcreteCharge.html","",""],["DailyUsageCharge","","DailyUsageCharge.html","",""],["DashingController","","DashingController.html","",""],["DashingHelper","","DashingHelper.html","",""],["FtpServer","","FtpServer.html","",""],["FtpServersController","","FtpServersController.html","",""],["FtpServersHelper","","FtpServersHelper.html","",""],["GeneratedInvoice","","GeneratedInvoice.html","",""],["GlobalUsageCharge","","GlobalUsageCharge.html","",""],["ImportedInvoice","","ImportedInvoice.html","",""],["Invoice","","Invoice.html","",""],["InvoicesController","","InvoicesController.html","",""],["InvoicesHelper","","InvoicesHelper.html","",""],["LinearRegressionPredictor","","LinearRegressionPredictor.html","",""],["Meter","","Meter.html","",""],["MeterAggregation","","MeterAggregation.html","",""],["MeterAggregationsController","","MeterAggregationsController.html","",""],["MeterAggregationsHelper","","MeterAggregationsHelper.html","",""],["MeterPredictor","","MeterPredictor.html","",""],["MeterRecord","","MeterRecord.html","",""],["MeterRecordsController","","MeterRecordsController.html","",""],["MeterRecordsHelper","","MeterRecordsHelper.html","",""],["Metering","","Metering.html","",""],["Metering::ClassMethods","","Metering/ClassMethods.html","",""],["MeteringCharge","","MeteringCharge.html","",""],["MetersController","","MetersController.html","",""],["MetersHelper","","MetersHelper.html","",""],["PredictedInvoice","","PredictedInvoice.html","",""],["RetailPlan","","RetailPlan.html","",""],["RetailPlansController","","RetailPlansController.html","",""],["RetailPlansHelper","","RetailPlansHelper.html","",""],["Retailer","","Retailer.html","",""],["Site","","Site.html","",""],["SitesController","","SitesController.html","",""],["SitesHelper","","SitesHelper.html","",""],["SupplyCharge","","SupplyCharge.html","",""],["User","","User.html","",""],["Users","","Users.html","",""],["Users::ConfirmationsController","","Users/ConfirmationsController.html","",""],["Users::OmniauthCallbacksController","","Users/OmniauthCallbacksController.html","",""],["Users::PasswordsController","","Users/PasswordsController.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["Users::UnlocksController","","Users/UnlocksController.html","",""],["UsersController","","UsersController.html","",""],["UsersHelper","","UsersHelper.html","",""],["after_sign_out_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_out_path_for","(resource_or_scope)","<p>Overwriting the sign_out redirect path method\n"],["aggregate_and_store","MeterAggregation","MeterAggregation.html#method-c-aggregate_and_store","(date_ranges, daily_time_periods, meters)","<p>Aggregates usage for Daily Time Periods from existing MeterRecords.\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["aggregate_missing_data","MeterAggregation","MeterAggregation.html#method-c-aggregate_missing_data","(date_ranges, daily_time_periods, meters)","<p>Finds gaps in aggregated data and fills them with estimations\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["all_day","Metering::ClassMethods","Metering/ClassMethods.html#method-i-all_day","()","<p>Gets an all day daily time periodtime\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["authenticate","ApplicationController","ApplicationController.html#method-i-authenticate","()",""],["badDateError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badDateError","()",""],["badMeterError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badMeterError","()",""],["badTimeError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-badTimeError","()",""],["bad_daily_time_periods_error","Metering::ClassMethods","Metering/ClassMethods.html#method-i-bad_daily_time_periods_error","(dtp)",""],["bad_date_range_error","Metering::ClassMethods","Metering/ClassMethods.html#method-i-bad_date_range_error","(dr)",""],["billing_site_params","BillingSitesController","BillingSitesController.html#method-i-billing_site_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["calculate","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-calculate","(start_date, end_date, daily_time_period, meter)","<p>Calculates and saves a predictor of type LinearRegressionPredictor for each\ndaily time period and meter …\n"],["calculate","MeterPredictor","MeterPredictor.html#method-c-calculate","(start_date, end_date, daily_time_period, meter)","<p>These functions should be implemented in subclasses, raises an error if not\nimplemented in them but are …\n"],["capacity_charges","RetailPlan","RetailPlan.html#method-i-capacity_charges","()","<p>Assign Retail Plan ID to capacity charges\n"],["certificate_charges","RetailPlan","RetailPlan.html#method-i-certificate_charges","()","<p>Assign Retail Plan ID to certificate charges\n"],["charge_types","ChargeFactory","ChargeFactory.html#method-c-charge_types","()","<p>Set and return the Charge types in a charge factory\n"],["chargefactories","RetailPlan","RetailPlan.html#method-i-chargefactories","()","<p>Returns an array containing the ChargeFactories used by this RetailPlan\n"],["check_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_meter","(meter)","<p>check if input is a Meter return error if it is not\n"],["check_meters","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_meters","(meters)","<p>check if input is an array of Meters return error if it is not\n"],["check_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_time","(daily_time_period)","<p>check if input is a daily time period (metering interface design document)\n<p>Author: Peter McNamara\n<p>Inputs …\n"],["check_times","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-check_times","(daily_time_periods)","<p>check if input is array of time periods (metering interface design\ndocument)\n<p>Author: Peter McNamara\n<p>Inputs …\n"],["compare","InvoicesController","InvoicesController.html#method-i-compare","()","<p>Compare Imported invoice with one associated generated invoice\n<p>post: /invoices/compare\n"],["compareInvoices","Invoice","Invoice.html#method-c-compareInvoices","(imported_invoice, generated_invoice)","<p>Compare a real imported invoice with the associated generated invoice\n<p>Inputs\n<p><code>imported_invoice</code> - an Invoice …\n"],["concreteCharge","CapacityCharge","CapacityCharge.html#method-i-concreteCharge","(invoice)","<p>Generate the concrete charge for capacity charge and maximum demand Return\nthe generated concrete charge …\n"],["concreteCharge","CertificateCharge","CertificateCharge.html#method-i-concreteCharge","(invoice)","<p>Generate concrete charge for SREC, LRET and ESC Return the generated\nconcrete charge Author: Keran Wang …\n"],["concreteCharge","ChargeFactory","ChargeFactory.html#method-i-concreteCharge","(invoice)","<p>Abstract method to be implemented in specific subclass\n"],["concreteCharge","DailyUsageCharge","DailyUsageCharge.html#method-i-concreteCharge","(invoice)","<p>Function concreteCharge override method of Chargefactory create concrete\ncharges for PredictedInvoice …\n"],["concreteCharge","GlobalUsageCharge","GlobalUsageCharge.html#method-i-concreteCharge","(invoice)","<p>concreteCharge override method of Chargefactory create concrete charges for\nPredictedInvoice and GeneratedInvoice …\n"],["concreteCharge","MeteringCharge","MeteringCharge.html#method-i-concreteCharge","(invoice)","<p>create concrete charges for PredictedInvoice and GeneratedInvoice. return\ncurrently created concrete …\n"],["concreteCharge","SupplyCharge","SupplyCharge.html#method-i-concreteCharge","(invoice)","<p>create concrete charges for PredictedInvoice and GeneratedInvoice. return\ncurrently created concrete …\n"],["confidence_query","MeterAggregation","MeterAggregation.html#method-c-confidence_query","()","<p>Gets a generic sql string to retrieve a confidence value from selected rows\n<p>Author: Reuben Braithwaite …\n"],["configure_account_update_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_account_update_params","()","<p>If you have extra params to permit, append them to the sanitizer.\n"],["configure_sign_up_params","Users::RegistrationsController","Users/RegistrationsController.html#method-i-configure_sign_up_params","()","<p>If you have extra params to permit, append them to the sanitizer.\n"],["create","BillingSitesController","BillingSitesController.html#method-i-create","()","<p>POST /billing_sites POST /billing_sites.json\n"],["create","FtpServersController","FtpServersController.html#method-i-create","()","<p>POST /ftp_servers POST /ftp_servers.json\n"],["create","MeterAggregationsController","MeterAggregationsController.html#method-i-create","()","<p>POST /meter_aggregations POST /meter_aggregations.json\n"],["create","MeterRecordsController","MeterRecordsController.html#method-i-create","()","<p>POST /meter_records POST /meter_records.json\n"],["create","MetersController","MetersController.html#method-i-create","()","<p>POST /meters POST /meters.json\n"],["create","RetailPlansController","RetailPlansController.html#method-i-create","()","<p>Create a new retail plan.\n<p>POST create\n"],["create","SitesController","SitesController.html#method-i-create","()","<p>POST /sites POST /sites.json\n"],["create_generated_invoice","InvoicesController","InvoicesController.html#method-i-create_generated_invoice","()","<p>Create a Generated invoice in the system from an imported invoice\n<p>post: /invoices/generate\n"],["create_imported_invoice","InvoicesController","InvoicesController.html#method-i-create_imported_invoice","()","<p>Create an Imported Invoice in the system. Once Imported, the system\nproceeds to generate an invoice based …\n"],["create_predicted_invoice","InvoicesController","InvoicesController.html#method-i-create_predicted_invoice","()","<p>Create a Predicted invoice in the system.\n<p>Authors: Ethan, Chris,Charlene, Arun., post: /invoices/predict …\n"],["current_retail_plan","RetailPlansHelper","RetailPlansHelper.html#method-i-current_retail_plan","()","<p>similar to RP.find(params) used in show and edit. Just created in case we\nneed to make use of current …\n"],["dailyTimePeriods","RetailPlan","RetailPlan.html#method-c-dailyTimePeriods","(meters)","<p>Return daily time periods for prediction method(Start and end time of Daily\nusage charges of retail plans …\n"],["daily_full_usage_sums","MeterAggregation","MeterAggregation.html#method-c-daily_full_usage_sums","(date_range, whitelist)","<p>Returns a set of daily usage totals for the Given Date range and Meters\n<p>Author: Reuben Braithwaite\n<p>Inputs …\n"],["daily_time_periods","RetailPlan","RetailPlan.html#method-c-daily_time_periods","(meters)","<p>Daily time periods for Metering system\n"],["daily_time_periods","RetailPlan","RetailPlan.html#method-i-daily_time_periods","()","<p>Return daily time periods (Start and end time of Daily usage charges of\nretail plans) Reloaded dailyTimePeriods …\n"],["daily_usage","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-daily_usage","(start_date, end_date)","<p>creates :usage hash array between start and end date (see metering\ninterface documentation for reference) …\n"],["daily_usage_charges","RetailPlan","RetailPlan.html#method-i-daily_usage_charges","()","<p>Assign Retail Plan ID to daily usage charges\n"],["daily_usage_hash","MeterAggregation","MeterAggregation.html#method-c-daily_usage_hash","(result)","<p>Formats and returns a hash of daily usages per date\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["daily_usage_sums","MeterAggregation","MeterAggregation.html#method-c-daily_usage_sums","(date_range, daily_time_periods, whitelist)","<p>Gets the daily usages for all meters in the whitelist and for the date\nrange specified.\n<p>Author: Reuben …\n"],["dashboard","DashingController","DashingController.html#method-i-dashboard","()",""],["date_clashes","RetailPlan","RetailPlan.html#method-i-date_clashes","()","<p>Validation methods\n"],["date_to_offset_integer","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-date_to_offset_integer","(date)","<p>maps a date to  an integer offsets from a set date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["dates_to_offset_integers","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-dates_to_offset_integers","(dates)","<p>maps dates to integer offsets from a set date so the linefit gem can use\nthe data\n<p>Author: Peter McNamara …\n"],["destroy","BillingSitesController","BillingSitesController.html#method-i-destroy","()","<p>DELETE /billing_sites/1 DELETE /billing_sites/1.json\n"],["destroy","FtpServersController","FtpServersController.html#method-i-destroy","()","<p>DELETE /ftp_servers/1 DELETE /ftp_servers/1.json\n"],["destroy","InvoicesController","InvoicesController.html#method-i-destroy","()","<p>Define the destroy method of Invoices Deletes selected invoice and returns\nto billing site\n"],["destroy","Meter","Meter.html#method-i-destroy","()","<p>Overrides inherited destroy method so that only a few, as opposed to\npotentially thousands, of database …\n"],["destroy","MeterAggregationsController","MeterAggregationsController.html#method-i-destroy","()","<p>DELETE /meter_aggregations/1 DELETE /meter_aggregations/1.json\n"],["destroy","MeterRecordsController","MeterRecordsController.html#method-i-destroy","()","<p>DELETE /meter_records/1 DELETE /meter_records/1.json\n"],["destroy","MetersController","MetersController.html#method-i-destroy","()","<p>DELETE /meters/1 DELETE /meters/1.json\n"],["destroy","RetailPlansController","RetailPlansController.html#method-i-destroy","()","<p>Destroy selected retail plan and return to corresponding billing site\n<p>POST destroy\n"],["destroy","SitesController","SitesController.html#method-i-destroy","()","<p>DELETE /sites/1 DELETE /sites/1.json\n"],["destroy_meter_aggregations","Meter","Meter.html#method-i-destroy_meter_aggregations","()","<p>Permanently destroys all MeterAggregations belonging to this Meter\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["destroy_meter_predictors","Meter","Meter.html#method-i-destroy_meter_predictors","()","<p>Permanently destroys all MeterPredictors belonging to this Meter\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["destroy_meter_records","Meter","Meter.html#method-i-destroy_meter_records","()","<p>Permanently destroys all MeterRecords belonging to this Meter\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["detailed_predicted_usage_by_meter","Meter","Meter.html#method-i-detailed_predicted_usage_by_meter","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_predicted_usage_by_meter","Meter","Meter.html#method-c-detailed_predicted_usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Requests detailed usage data (including daily totals), for the requested\nmeters, from a MeterPredictor …\n"],["detailed_predicted_usage_by_time","Meter","Meter.html#method-c-detailed_predicted_usage_by_time","(date_ranges, daily_time_periods, meters)","<p>Requests detailed usage data (including daily totals), organised by Daily\nTime Period, for the requested …\n"],["detailed_predicted_usage_by_time","Meter","Meter.html#method-i-detailed_predicted_usage_by_time","(date_ranges, daily_time_periods)","<p>TODO add this method to SDD\n"],["detailed_usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-detailed_usage_by_meter","(date_range, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["detailed_usage_by_meter","Meter","Meter.html#method-c-detailed_usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Calculates detailed usage (including daily usage totals) for the requested\nMeters\n<p>Author: Reuben Braithwaite …\n"],["detailed_usage_by_meter","Meter","Meter.html#method-i-detailed_usage_by_meter","(date_ranges, daily_time_periods)","<p>Calculates detailed usage (including daily usage totals) for this\nmeterPeriod\n<p>Author: Reuben Braithwaite …\n"],["detailed_usage_by_meter","MeterPredictor","MeterPredictor.html#method-c-detailed_usage_by_meter","(date_range, daily_time_period, meter)",""],["detailed_usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-detailed_usage_by_time","(date_range, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["detailed_usage_by_time","Meter","Meter.html#method-i-detailed_usage_by_time","(date_ranges, daily_time_periods)","<p>Calculates detailed usage (including daily usage totals) for this meter,\norganised by Daily Time Period …\n"],["detailed_usage_by_time","Meter","Meter.html#method-c-detailed_usage_by_time","(date_ranges, daily_time_periods, meters)","<p>Calculates detailed usage (including daily usage totals) for the requested\nMeters, organised by Daily …\n"],["detailed_usage_by_time","MeterPredictor","MeterPredictor.html#method-c-detailed_usage_by_time","(date_range, daily_time_period, meter)",""],["directoryNotFoundError","Metering::ClassMethods","Metering/ClassMethods.html#method-i-directoryNotFoundError","(d)","<p>Errors\n"],["download","FtpServer","FtpServer.html#method-c-download","()","<p>Download the data from all the FTP server\n"],["dtp_meter_usage","MeterAggregation","MeterAggregation.html#method-c-dtp_meter_usage","(date_range, dtp, whitelist, options)","<p>Gets an array of usage data hashes for the given Daily Time Period, and\nbroken down by Meter\n<p>Author:  …\n"],["dtp_meter_usage_sums","MeterAggregation","MeterAggregation.html#method-c-dtp_meter_usage_sums","(date_range, dtps, whitelist)","<p>Gets the total usage each meter in the whitelist and for the date range\nspecified. Returns a float.\n<p>Author: …\n"],["dtp_usage","MeterAggregation","MeterAggregation.html#method-c-dtp_usage","(date_range, dtps, whitelist, options)","<p>Gets an array of usage data hashes for the given Daily Time Periods, and\nbroken down by Meter\n<p>Author: …\n"],["edit","BillingSitesController","BillingSitesController.html#method-i-edit","()","<p>GET /billing_sites/1/edit\n"],["edit","FtpServersController","FtpServersController.html#method-i-edit","()","<p>GET /ftp_servers/1/edit\n"],["edit","MeterAggregationsController","MeterAggregationsController.html#method-i-edit","()","<p>GET /meter_aggregations/1/edit\n"],["edit","MeterRecordsController","MeterRecordsController.html#method-i-edit","()","<p>GET /meter_records/1/edit\n"],["edit","RetailPlansController","RetailPlansController.html#method-i-edit","()","<p>POST edit\n"],["edit","SitesController","SitesController.html#method-i-edit","()","<p>GET /sites/1/edit\n"],["format_converter","BillingSitesController","BillingSitesController.html#method-i-format_converter","(usages, daily_time_periods, interval)","<p>Convert the usage into the format what the google chart can be used\n<p>Attributes\n<p><code>usages</code> - The detail electricity …\n"],["generateNew","InvoicesController","InvoicesController.html#method-i-generateNew","()","<p>get: /invoices/generateNew\n"],["generate_date_ranges","BillingSitesController","BillingSitesController.html#method-i-generate_date_ranges","(start_date, end_date, interval)","<p>generate the date ranges based on the interval and return a array of date\nrange\n<p>Attributes\n<p><code>start_date</code> - …\n"],["get_daily_time_periods","Meter","Meter.html#method-c-get_daily_time_periods","(meters)","<p>Returns an array of Daily Time Periods This method calls the Billing\nsubsystem to get DTPs. Every other …\n"],["get_date_ranges","MeterRecordsController","MeterRecordsController.html#method-i-get_date_ranges","()",""],["get_dtps","MeterRecordsController","MeterRecordsController.html#method-i-get_dtps","()",""],["get_meters","MeterRecordsController","MeterRecordsController.html#method-i-get_meters","()",""],["get_prediction_invoice","BillingSitesController","BillingSitesController.html#method-i-get_prediction_invoice","(billing_site_id)",""],["get_prediction_invoice","Invoice","Invoice.html#method-c-get_prediction_invoice","(billing_site_id)","<p>Get the list of predicted invoice\n<p>Attributes\n<p><code>billing_site_id</code> - The billing site ID the invoice belonged …\n"],["global_usage_charges","RetailPlan","RetailPlan.html#method-i-global_usage_charges","()","<p>Assign Retail Plan ID to global usage charges\n"],["importCSV","ImportedInvoice","ImportedInvoice.html#method-i-importCSV","(retail_plan, file)","<p>Importing of an Invoice Looks for and saves every charge in the uploaded\ninvoice\n"],["import_concrete_charge","ChargeFactory","ChargeFactory.html#method-i-import_concrete_charge","(invoice, amount)",""],["import_invoice","InvoicesController","InvoicesController.html#method-i-import_invoice","()","<p>Import an invoice to the system /invoices/new\n"],["import_nem12","Meter","Meter.html#method-c-import_nem12","(directory, meters)","<p>Interface to import data to the system. All work is done by\nMeterRecord.import_nem Reads the specified …\n"],["import_nem12","MeterRecord","MeterRecord.html#method-c-import_nem12","(directory, meters)","<p>Imports NEM12, reads the given directory, and imports any NEM12 records\nfound, provided the records is …\n"],["import_nem12","MeterRecordsController","MeterRecordsController.html#method-i-import_nem12","()","<p>Calls the static class method Meter.import\n"],["import_nem12","UsersController","UsersController.html#method-i-import_nem12","()","<p>POST /users/import Store the nem12 file into user&#39;s home directory\n"],["inclusive_usage","MeterAggregation","MeterAggregation.html#method-c-inclusive_usage","(date_ranges, meters, detailed)","<p>Gets an array of top level, inclusive usage data hashes As per spec\nInterface08, usage data in the top …\n"],["index","BillingSitesController","BillingSitesController.html#method-i-index","()","<p>GET /billing_sites GET /billing_sites.json\n"],["index","FtpServersController","FtpServersController.html#method-i-index","()","<p>GET /ftp_servers GET /ftp_servers.json\n"],["index","InvoicesController","InvoicesController.html#method-i-index","()","<p>Define the index for Invoices\n<p>/invoices\n"],["index","MeterAggregationsController","MeterAggregationsController.html#method-i-index","()","<p>GET /meter_aggregations GET /meter_aggregations.json\n"],["index","MeterRecordsController","MeterRecordsController.html#method-i-index","()","<p>GET /meter_records GET /meter_records.json\n"],["index","RetailPlansController","RetailPlansController.html#method-i-index","()","<p>Index page for Retail Plans GET index\n"],["index","SitesController","SitesController.html#method-i-index","()","<p>GET /sites GET /sites.json\n"],["invoice_directory","ImportedInvoice","ImportedInvoice.html#method-i-invoice_directory","()","<p>Specify the invoice directory\n"],["isDate","BillingSitesController","BillingSitesController.html#method-i-isDate","(stringDate)","<p>check if object is a Date from the return of the form (string form)\n"],["is_array_of_meters","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_array_of_meters","(meters)","<p>Validating arguments passed to public methods\n"],["is_date","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_date","(d)","<p>Returns true if d is a Date\n"],["is_meter","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_meter","(m)","<p>Return true if m is a Meter\n"],["is_time","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_time","(t)","<p>Returns true if t is a Time\n"],["is_valid_daily_time_periods","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_valid_daily_time_periods","(dtps)",""],["is_valid_date_ranges","Metering::ClassMethods","Metering/ClassMethods.html#method-i-is_valid_date_ranges","(drs)",""],["log_pg_result","Metering::ClassMethods","Metering/ClassMethods.html#method-i-log_pg_result","(result)","<p>Dumps the contents of a query result to the logger\n"],["make_daily_meter_hash_array","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_daily_meter_hash_array","(date_range, daily_time_periods, meters,detailed)","<p>makes the hash broken down by daily usage period first (see design document\nmetering interface)\n<p>Author: …\n"],["make_meter_daily_hash_array","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_meter_daily_hash_array","(date_range, daily_time_periods, meters,detailed)","<p>makes the hash broken down by meter first (see design document metering\ninterface)\n<p>Author: Peter McNamara …\n"],["make_prediction","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-make_prediction","(daily_usages, dates)","<p>fit a line to the data using linear regression\n<p>Author: Peter McNamara\n<p>Inputs\n"],["meter_usage","MeterAggregation","MeterAggregation.html#method-c-meter_usage","(date_range, dtps, whitelist, options)","<p>Gets an array of usage data hashes by Meter\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["metering_charges","RetailPlan","RetailPlan.html#method-i-metering_charges","()","<p>Assign Retail Plan ID to metering charges\n"],["meters","RetailPlan","RetailPlan.html#method-i-meters","()","<p>Returns an array of the meters that are used by this RetailPlan\n"],["midday","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-midday","()","<p>simple function to return the time representing noon (midday)\n"],["midday","Metering::ClassMethods","Metering/ClassMethods.html#method-i-midday","()","<p>Gets the time at midday\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["minutes_in_day","Metering::ClassMethods","Metering/ClassMethods.html#method-i-minutes_in_day","()","<p>Returns the number of minutes in a day\n"],["minutes_in_hour","Metering::ClassMethods","Metering/ClassMethods.html#method-i-minutes_in_hour","()","\n<pre>Returns the number of minutes in an hour</pre>\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["multiple_predicted_usage","MeterRecordsController","MeterRecordsController.html#method-i-multiple_predicted_usage","()",""],["multiple_usage","MeterRecordsController","MeterRecordsController.html#method-i-multiple_usage","()","<p>Calls the Meter.usage static class method\n"],["name_presence","FtpServer","FtpServer.html#method-i-name_presence","()",""],["nem12_uom","Metering::ClassMethods","Metering/ClassMethods.html#method-i-nem12_uom","()","<p>Returns an array of valid units of measurement for NEM12\n"],["nem12_uom_to_kuom","Metering::ClassMethods","Metering/ClassMethods.html#method-i-nem12_uom_to_kuom","(old_uom)","<p>Returns the Unit of Measurement in terms of k i.e., &#39;wh&#39; return\n&#39;kwh&#39; etc.\n"],["nem12_uom_to_kwh_multiplier","Metering::ClassMethods","Metering/ClassMethods.html#method-i-nem12_uom_to_kwh_multiplier","(old_uom)","<p>Returns the unit by which to multiply an aggregation to get kwh TODO Look\nover this with someone that …\n"],["new","BillingSitesController","BillingSitesController.html#method-i-new","()","<p>GET /billing_sites/new\n"],["new","FtpServersController","FtpServersController.html#method-i-new","()","<p>GET /ftp_servers/new\n"],["new","GeneratedInvoice","GeneratedInvoice.html#method-c-new","(attributes)","<p>Overwrite constructor initialize Calling generateConcreteCharges to\ngenerate concrete charges and column …\n"],["new","ImportedInvoice","ImportedInvoice.html#method-c-new","(retail_plan, file)","<p>initialize an imported invoice\n"],["new","MeterAggregationsController","MeterAggregationsController.html#method-i-new","()","<p>GET /meter_aggregations/new\n"],["new","MeterRecordsController","MeterRecordsController.html#method-i-new","()","<p>GET /meter_records/new\n"],["new","PredictedInvoice","PredictedInvoice.html#method-c-new","(attributes)","<p>Reload constructor initialize Calling generateConcreteCharges to generate\nconcrete charges and column …\n"],["new","RetailPlansController","RetailPlansController.html#method-i-new","()","<p>GET new\n"],["new","SitesController","SitesController.html#method-i-new","()","<p>GET /sites/new\n"],["notify_new_data","Meter","Meter.html#method-c-notify_new_data","(meters, date_ranges)","<p>Called whenever new MeterRecords enter the system. This method should call\nanything that needs to know …\n"],["offset_integer_to_date","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-offset_integer_to_date","(offset_integer)","<p>maps integer offset from a set date to a  date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["offset_integers_to_dates","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-offset_integers_to_dates","(offset_integers)","<p>maps integer offsets from a set date to dates\n<p>Author: Peter McNamara\n<p>Inputs\n"],["pgresult_to_hash","Metering::ClassMethods","Metering/ClassMethods.html#method-i-pgresult_to_hash","(result)","<p>Transforms a PostGresql result object into a hash, used in development\n<p>Author: Reuben Braithwaite\n<p>Inputs …\n"],["portable_format","Invoice","Invoice.html#method-i-portable_format","()","<p>This method is used to return portable data, which describes some attribute\nof an Invoice\n<p>Outputs\n<p>Returns …\n"],["predict","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-predict","(date)","<p>predict the usage for a date\n<p>Author: Peter McNamara\n<p>Inputs\n"],["predictNew","InvoicesController","InvoicesController.html#method-i-predictNew","()","<p>get: /invoices/predictNew\n"],["predict_for_period","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-predict_for_period","(meter, start_time, end_time, date_range)","<p>Calculates usage for daily time period corresponding to the whole day\nAuthor: Peter McNamara\n<p>Inputs\n<p><code>meter</code> …\n"],["predict_format_converter","BillingSitesController","BillingSitesController.html#method-i-predict_format_converter","(usages)","<p>Convert the usage into the format what the google chart can be used\n<p>Attributes\n<p><code>usages</code> - The usage json …\n"],["predict_whole_day","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-predict_whole_day","(meter, date_range)","<p>Calculates usage for daily time period corresponding to the whole day\nAuthor: Peter McNamara\n<p>Inputs\n<p><code>meter</code> …\n"],["predictable_billing_periods","RetailPlan","RetailPlan.html#method-i-predictable_billing_periods","()","<p>Returns an array of billing periods, for which the system is able to\nprovide predicted data\n"],["predicted_usage_by_meter","Meter","Meter.html#method-i-predicted_usage_by_meter","(date_ranges, daily_time_periods)","<p>Methods for predicted usage\n"],["predicted_usage_by_meter","Meter","Meter.html#method-c-predicted_usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Requests usage data, for the requested meters, from a MeterPredictor\n<p>Author: Reuben Braithwaite\n<p>Inputs …\n"],["predicted_usage_by_time","Meter","Meter.html#method-c-predicted_usage_by_time","(date_ranges, daily_time_periods, meters)","<p>Requests usage data organised by Daily Time Period, for the requested\nmeters, from a MeterPredictor\n<p>Author: …\n"],["predicted_usage_by_time","Meter","Meter.html#method-i-predicted_usage_by_time","(date_ranges, daily_time_periods)",""],["predictor","Meter","Meter.html#method-c-predictor","()","<p>Returns the class that is being used as a Predictor.\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["reaggregate","Meter","Meter.html#method-c-reaggregate","(date_ranges, daily_time_periods, meters)","<p>Performs an aggregation on the requested Meters, and for the time periods\nand date ranges given\n<p>Author: …\n"],["redirect_user","ApplicationController","ApplicationController.html#method-i-redirect_user","()","<p>Redirect user to 404 page if no route matches\n<p>Author &mdash; Charlene\n\n"],["retail_plan_params","RetailPlansController","RetailPlansController.html#method-i-retail_plan_params","()","<p>Allow particular (or all) parameters of Retail plan to be saved\n"],["select_date_period","InvoicesController","InvoicesController.html#method-i-select_date_period","()","<p>Select predictable billing period for Prediction method\n"],["set_retail_plan","RetailPlansController","RetailPlansController.html#method-i-set_retail_plan","()","<p>Required parameters for Retail Plan forms.\n"],["show","BillingSitesController","BillingSitesController.html#method-i-show","()","<p>GET /billing_sites/1 GET /billing_sites/1.json\n"],["show","FtpServersController","FtpServersController.html#method-i-show","()","<p>GET /ftp_servers/1 GET /ftp_servers/1.json\n"],["show","InvoicesController","InvoicesController.html#method-i-show","()","<p>invoices/:id\n"],["show","MeterAggregationsController","MeterAggregationsController.html#method-i-show","()","<p>GET /meter_aggregations/1 GET /meter_aggregations/1.json\n"],["show","MeterRecordsController","MeterRecordsController.html#method-i-show","()","<p>GET /meter_records/1 GET /meter_records/1.json\n"],["show","RetailPlansController","RetailPlansController.html#method-i-show","()","<p>GET show\n"],["show","SitesController","SitesController.html#method-i-show","()","<p>GET /sites/1 GET /sites/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1\n"],["show_predict_usage","BillingSitesController","BillingSitesController.html#method-i-show_predict_usage","()","<p>GET /billing_sites/1/predictions\n"],["show_usage","BillingSitesController","BillingSitesController.html#method-i-show_usage","()","<p>GET /billing_sites/1/usage\n"],["single_predicted_usage","MeterRecordsController","MeterRecordsController.html#method-i-single_predicted_usage","()","<p>Calls the meter.usage instance method\n"],["single_usage","MeterRecordsController","MeterRecordsController.html#method-i-single_usage","()","<p>Calls the meter.usage instance method\n"],["store_attributes","ConcreteCharge","ConcreteCharge.html#method-i-store_attributes","(name, meters, rate, cost, uom, usage, confidence, invoice_rate, days=nil)","<p>Store the specific information of the invoice into a hash table called\ncharge_attributes Author: Keran …\n"],["store_file","ImportedInvoice","ImportedInvoice.html#method-i-store_file","(file)","<p>Store the imported invoice in specified directory\n"],["sum_usage","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-sum_usage","(daily_usage)","<p>Sums :daily_usage array (see metering interface documentation for\nreference) Author: Peter McNamara\n<p>Inputs …\n"],["supply_charges","RetailPlan","RetailPlan.html#method-i-supply_charges","()","<p>Assign Retail Plan ID to supply charges\n"],["time","ApplicationController","ApplicationController.html#method-c-time","(hour, minute)",""],["time_to_minute","Metering::ClassMethods","Metering/ClassMethods.html#method-i-time_to_minute","(t)","<p>Converts a Time object to an integer, which is the minute of the day\n"],["total_dtp_usage_sums","MeterAggregation","MeterAggregation.html#method-c-total_dtp_usage_sums","(date_range, daily_time_periods, whitelist)","<p>Gets the total usage each meter in the whitelist and for the date range\nspecified. Gets the total usage …\n"],["total_meter_usage_sums","MeterAggregation","MeterAggregation.html#method-c-total_meter_usage_sums","(date_range, whitelist)","<p>Gets an array of Meter&#39;s top-level total usage data hashes\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["total_usage_sums","MeterAggregation","MeterAggregation.html#method-c-total_usage_sums","(date_range, whitelist)","<p>Gets the total usage for all meters in the whitelist and for the date range\nspecified. Returns a float. …\n"],["trim_date_ranges","Meter","Meter.html#method-c-trim_date_ranges","(date_ranges, meters)","<p>Trims Date Ranges to a more manageable range. Note that this functionality\nhas been disabled.\n<p>Author: …\n"],["truncate","MeterAggregationsController","MeterAggregationsController.html#method-i-truncate","()","<p>Empty the Aggregations table, restart the index\n"],["truncate","MeterRecordsController","MeterRecordsController.html#method-i-truncate","()","<p>Empty the Records table, restart the index\n"],["truncate_aggregations","MeterRecordsController","MeterRecordsController.html#method-i-truncate_aggregations","()",""],["truncate_records","MeterRecordsController","MeterRecordsController.html#method-i-truncate_records","()",""],["update","BillingSitesController","BillingSitesController.html#method-i-update","()","<p>PATCH/PUT /billing_sites/1 PATCH/PUT /billing_sites/1.json\n"],["update","FtpServersController","FtpServersController.html#method-i-update","()","<p>PATCH/PUT /ftp_servers/1 PATCH/PUT /ftp_servers/1.json\n"],["update","MeterAggregationsController","MeterAggregationsController.html#method-i-update","()","<p>PATCH/PUT /meter_aggregations/1 PATCH/PUT /meter_aggregations/1.json\n"],["update","MeterRecordsController","MeterRecordsController.html#method-i-update","()","<p>PATCH/PUT /meter_records/1 PATCH/PUT /meter_records/1.json\n"],["update","MetersController","MetersController.html#method-i-update","()","<p>PATCH/PUT /meters/1 PATCH/PUT /meters/1.json\n"],["update","RetailPlansController","RetailPlansController.html#method-i-update","()","<p>Update action applies when user edits the fields of existing retail plan.\nFind the RP by id, apply update …\n"],["update","SitesController","SitesController.html#method-i-update","()","<p>PATCH/PUT /sites/1 PATCH/PUT /sites/1.json\n"],["update_generated_invoice","BillingSite","BillingSite.html#method-c-update_generated_invoice","(meters, date_ranges)","<p>Generate a new invoice based on the updated usage data Author: Keran Wang\n"],["update_poll_dates","FtpServer","FtpServer.html#method-c-update_poll_dates","(server)","<p>Update the last poll date and next poll date\n<p>Attributes\n<p><code>server</code> - The server instance\n"],["upload_nem12","UsersController","UsersController.html#method-i-upload_nem12","()","<p>GET /users/import Upload NEM12\n"],["usage","GeneratedInvoice","GeneratedInvoice.html#method-c-usage","(start_date, end_date, daily_usage_period, meters)","<p>Get the usage data from metering system for a specfic time period Return\nthe usage data\n"],["usage","Meter","Meter.html#method-i-usage","(start_date, end_date, start_time, end_time)","<p>Performs an aggregation on the requested Meters, and for the time periods\nand date ranges given\n<p><code>Deprecated</code> …\n"],["usage","PredictedInvoice","PredictedInvoice.html#method-c-usage","(start_date, end_date, daily_usage_period, meters)","<p>Get the usage data from metering system for a specfic time period Return\nthe usage data\n"],["usage_by_dtp","MeterAggregation","MeterAggregation.html#method-c-usage_by_dtp","(date_ranges, daily_time_periods, meters, detailed = false)","<p>Gets usage data organised by daily time period.\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-usage_by_meter","(start_date, end_date, daily_time_period)","<p>Calculates usage for this meter, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_meter","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-usage_by_meter","(start_date, end_date, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_meter","Meter","Meter.html#method-c-usage_by_meter","(date_ranges, daily_time_periods, meters)","<p>Calculates detailed usage for the requested Meters\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["usage_by_meter","Meter","Meter.html#method-i-usage_by_meter","(date_ranges, daily_time_periods)","<p>Calculates usage for this meter\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["usage_by_meter","MeterAggregation","MeterAggregation.html#method-c-usage_by_meter","(date_ranges, daily_time_periods, meters, detailed = false)","<p>Gets usage data organised by meter.\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["usage_by_meter","MeterPredictor","MeterPredictor.html#method-i-usage_by_meter","(start_date, end_date, daily_time_period)",""],["usage_by_meter","MeterPredictor","MeterPredictor.html#method-c-usage_by_meter","(start_date, end_date, daily_time_period, meter)",""],["usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-usage_by_time","(start_date, end_date, daily_time_period, meter)","<p>Calculates usage, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_time","LinearRegressionPredictor","LinearRegressionPredictor.html#method-i-usage_by_time","(start_date, end_date, daily_time_period)","<p>Calculates usage for this meter, uses #use for the functionality\n<p>Author: Peter McNamara\n<p>Inputs\n"],["usage_by_time","Meter","Meter.html#method-c-usage_by_time","(date_ranges, daily_time_periods, meters)","<p>Calculates usage for the requested Meters, organised by Daily Time Period\n<p>Author: Reuben Braithwaite\n<p>Inputs …\n"],["usage_by_time","Meter","Meter.html#method-i-usage_by_time","(date_ranges, daily_time_periods)","<p>Calculates usage for this meter, organised by Daily Time Period\n<p>Author: Reuben Braithwaite\n<p>Inputs\n"],["usage_by_time","MeterPredictor","MeterPredictor.html#method-i-usage_by_time","(start_date, end_date, daily_time_period)",""],["usage_by_time","MeterPredictor","MeterPredictor.html#method-c-usage_by_time","(start_date, end_date, daily_time_period, meter)",""],["use","LinearRegressionPredictor","LinearRegressionPredictor.html#method-c-use","(date_range, daily_time_period, meter, broken_by, detailed)","<p>generic function to return usage in the complicated hash format specified\nUsed by all the external functions …\n"],["value_presence","RetailPlan","RetailPlan.html#method-i-value_presence","()","<p>Validation methods\n"],["README","","README_rdoc.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get the\napplication up and …\n"]]}}